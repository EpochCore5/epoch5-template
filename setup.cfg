[metadata]
name = epoch5-template
version = 1.0.0
description = EPOCH5 Template - Agent-Based Workflow Automation Framework
long_description = file: README.md
long_description_content_type = text/markdown
author = EpochCore5
author_email = info@epochcore5.example.com
license = MIT
license_file = LICENSE
platforms = unix, linux, osx, win32
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Utilities
    Typing :: Typed
keywords = epoch5, agent, ai, automation, workflow
project_urls =
    Source = https://github.com/EpochCore5/epoch5-template
    Tracker = https://github.com/EpochCore5/epoch5-template/issues

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
include_package_data = True
install_requires =
    importlib-metadata; python_version < "3.8"

[options.extras_require]
dev =
    black>=23.1.0
    flake8>=6.0.0
    isort>=5.12.0
    mypy>=1.0.0
    pre-commit>=3.0.0
    pytest>=7.0.0
    pytest-cov>=4.0.0
    tox>=4.0.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    sphinx-autodoc-typehints>=1.15.0
    myst-parser>=1.0.0

[options.packages.find]
exclude =
    tests
    tests.*

[options.entry_points]
console_scripts =
    epoch5 = epoch5:main
    strategydeck = strategydeck_integration:main

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = --cov=. --cov-report=html --cov-report=term-missing --cov-report=xml
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration (deselect with '-m "not integration"')
    e2e: marks tests as end-to-end (deselect with '-m "not e2e"')
    strategydeck: marks tests as StrategyDECK specific (deselect with '-m "not strategydeck"')

[coverage:run]
source = .
omit = 
    tests/*
    .venv/*
    venv/*
    */site-packages/*
    setup.py
    docs/*
    conf/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
fail_under = 80

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude = .git,__pycache__,docs/source/conf.py,old,build,dist,.venv,venv
select = C,E,F,W,B,B950
ignore = E501,W503,E203
per-file-ignores =
    __init__.py: F401

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
strict_optional = True

[[mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = False
disallow_incomplete_defs = False