name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
        
    - name: Install Node.js dependencies
      run: npm install
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run Python safety check
      run: safety check --json --output safety-report.json
      continue-on-error: true
      
    - name: Upload safety report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: safety-report
        path: safety-report.json

  static-analysis:
    name: Static Analysis Security Testing (SAST)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install bandit
      run: pip install bandit[toml]
      
    - name: Run bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt
      continue-on-error: true
      
    - name: Upload bandit report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: bandit-report.json
        
    - name: Install semgrep
      run: pip install semgrep
      
    - name: Run semgrep security scan
      run: |
        semgrep --config=auto --json --output=semgrep-report.json . || true
        semgrep --config=auto .
      continue-on-error: true
      
    - name: Upload semgrep report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: semgrep-report
        path: semgrep-report.json

  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install gitleaks
      run: |
        wget -q https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks_8.18.0_linux_x64.tar.gz
        tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
        sudo mv gitleaks /usr/local/bin/
        
    - name: Run gitleaks
      run: gitleaks detect --source . --verbose --report-path gitleaks-report.json
      continue-on-error: true
      
    - name: Upload gitleaks report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: gitleaks-report
        path: gitleaks-report.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2