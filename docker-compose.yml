version: '3.8'

services:
  # Main EPOCH5 application
  epoch5-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: epoch5-app
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    volumes:
      - ./archive:/app/archive
      - ./logs:/app/logs
    networks:
      - epoch5-network
    depends_on:
      - prometheus
      - grafana
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "integration.py", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: epoch5-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - epoch5-network
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: epoch5-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=epoch5admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - epoch5-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Elasticsearch for log storage (ELK Stack)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: epoch5-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=epoch5-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - epoch5-network
    restart: unless-stopped

  # Logstash for log processing
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: epoch5-logstash
    volumes:
      - ./monitoring/logstash:/usr/share/logstash/pipeline
      - ./logs:/app/logs:ro
    ports:
      - "5044:5044"
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - epoch5-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: epoch5-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - epoch5-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # Redis for caching (optional enhancement)
  redis:
    image: redis:7-alpine
    container_name: epoch5-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - epoch5-network
    restart: unless-stopped

networks:
  epoch5-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
  redis_data: